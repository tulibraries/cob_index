name: Lint and Test

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch: {}

env:
  RAILS_ENV: test

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        ruby: [ "3.4" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
        
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          
      - name: Lint
        run: bundle exec rubocop

  test:
    runs-on: ubuntu-latest
    needs: Lint
    strategy:
      fail-fast: true
      matrix:
        ruby: [ "3.4" ]

    services:
      zookeeper:
        image: zookeeper:3.7
        env:
          ZOO_CFG_EXTRA: "4lw.commands.whitelist=mntr,conf,ruok"
        ports:
          - 2181:2181
      solr:
        image: solr:9.8.1
        env:
          ZK_HOST: "zookeeper:2181"
        ports:
          - 8983:8983
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      
      - name: Wait for ZooKeeper to be ready
        run: |
          timeout 60 bash -c 'until nc -z localhost 2181; do sleep 2; done'

      - name: Wait for Solr container to be running
        run: |
          for i in {1..30}; do
            CONTAINER=$(docker ps --filter "ancestor=solr:9.8.1" --format "{{.ID}}")
            if [ -n "$CONTAINER" ]; then
              echo "Solr container is running: $CONTAINER"
              exit 0
            fi
            sleep 2
          done
          echo "Solr container did not start in time"
          exit 1
        
      - name: Upload security.json file to solr container
        run: |
          SOLR_CONTAINER=$(docker ps --filter "ancestor=solr:9.8.1" --format "{{.ID}}")
          docker cp .github/workflows/security.json $SOLR_CONTAINER:/security.json
          
      - name: Upload security.json to Zookeeper
        run: |
          SOLR_CONTAINER=$(docker ps --filter "ancestor=solr:9.8.1" --format "{{.ID}}")
          docker exec $SOLR_CONTAINER bin/solr zk cp /security.json zk:/security.json

      - name: Test
        run: bundle exec rspec spec
        
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov/cob_index.lcov
          
      - name: Copy Solr config‚Äêset into container
        run: |
          SOLR_CONTAINER=$(docker ps --filter "ancestor=solr:9.8.1" --format "{{.ID}}")
          docker cp solr/configs/tul_cob-catalog-solr $SOLR_CONTAINER:/tmp/tul_cob-catalog-solr

      - name: Upload configset to ZooKeeper
        run: |
          SOLR_CONTAINER=$(docker ps --filter "ancestor=solr:9.8.1" --format "{{.ID}}")
          # Remove forbidden files (shell scripts, etc.) before upload
          docker exec $SOLR_CONTAINER rm -rf /tmp/tul_cob-catalog-solr/bin
          docker exec $SOLR_CONTAINER find /tmp/tul_cob-catalog-solr -name "*.sh" -delete || true
          docker exec $SOLR_CONTAINER bin/solr zk upconfig \
            -n tul_cob-catalog-solr \
            -d /tmp/tul_cob-catalog-solr \
            -z zookeeper:2181

      - name: Load Solr config & data
        run: make load-data
        
      - name: Run relevancy Tests
        run: make test-relevancy